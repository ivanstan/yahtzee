{"version":3,"sources":["components/VerticalArrowToward.tsx","components/VerticalArrowOpposite.tsx","components/Board.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Flex","styled","div","VerticalArrowToward","icon","faChevronDown","faChevronUp","React","Component","VerticalArrowOpposite","Table","table","Row","tr","SumRow","Cell","td","HeaderCell","Input","input","SumInput","Board","state","setValue","dirtyValue","row","col","value","parseInt","isNaN","setState","calculateRowSum","calculateColSum","calculateTotal","total","i","sumRows","COL_SUM","TOTAL","sum","j","hasOwnProperty","summableCols","calculateCellSum","multiplier","min","max","sumCols","getSumCols","sumCol","sumRow","getValue","isSumRow","isEnabled","e","keyCode","target","blur","this","rowNum","currentTarget","includes","validValues","values","push","focus","faDice","items","renderItem","index","key","condition","COL_TOWARD","style","position","fontSize","top","onChange","disabled","onKeyDown","onKeyPress","onBlur","className","getClasses","type","COL_OPPOSITE","bottom","colSpan","COL_UP","COL_UP_DOWN","COL_DOWN","COL_N","COL_R","COL_D","COL_O","COL_M","editableRows","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.26ddb149.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Flex = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nclass VerticalArrowToward extends React.Component<any, any> {\r\n    render() {\r\n        return (\r\n            <Flex>\r\n                <FontAwesomeIcon icon={faChevronDown}/>\r\n                <FontAwesomeIcon icon={faChevronUp}/>\r\n            </Flex>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerticalArrowToward;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Flex = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nclass VerticalArrowOpposite extends React.Component<any, any> {\r\n    render() {\r\n        return (\r\n            <Flex>\r\n                <FontAwesomeIcon icon={faChevronUp}/>\r\n                <FontAwesomeIcon icon={faChevronDown}/>\r\n            </Flex>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerticalArrowOpposite;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown, faChevronUp, faDice } from '@fortawesome/free-solid-svg-icons'\r\nimport VerticalArrowToward from './VerticalArrowToward';\r\nimport VerticalArrowOpposite from './VerticalArrowOpposite';\r\nimport Each from 'react-each';\r\nimport { If } from 'react-if';\r\n\r\nconst Table = styled.table`\r\n    border: 2px solid #5c6274;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    color: #5c6274;\r\n`;\r\n\r\nconst Row = styled.tr`\r\n    border: 2px solid #5c6274;\r\n`;\r\n\r\nconst SumRow = styled(Row)`\r\n    background: #D1DAE7;\r\n`;\r\n\r\nconst Cell = styled.td`\r\n    border: 2px solid #5c6274;\r\n    position: relative;\r\n    width: 8.33%;\r\n    height: 32px;\r\n`;\r\n\r\nconst HeaderCell = styled(Cell)`\r\n    background: #A4B5CC;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    display: block;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    margin: 0;\r\n    padding: 0;\r\n    vertical-align: top;\r\n    max-width: 40px;\r\n    margin: auto;\r\n    font-family: 'Patrick Hand', cursive;\r\n    font-size: 17px;\r\n    color: #5c6274;\r\n    font-style: italic;\r\n    background: transparent;\r\n    border: 0;\r\n    \r\n    :focus {\r\n        outline: none !important;\r\n        border: 0;\r\n        background: #FFAAAA;\r\n    }\r\n`;\r\n\r\nconst SumInput = styled(Input)`\r\n    cursor: auto;\r\n`;\r\n\r\nconst DICE_COUNT = 6;\r\nconst MAX_SINGLE_DICE_RESULT = 6;\r\nconst MAX_SINGLE_THROW_RESULT = (DICE_COUNT - 1) * MAX_SINGLE_DICE_RESULT;\r\n\r\nclass Board extends React.Component<any, any> {\r\n\r\n    public static COL_UP = 0;\r\n    public static COL_UP_DOWN = 1;\r\n    public static COL_DOWN = 2;\r\n    public static COL_N = 3;\r\n    public static COL_R = 4;\r\n    public static COL_D = 5;\r\n    public static COL_OPPOSITE = 6;\r\n    public static COL_TOWARD = 7;\r\n    public static COL_O = 8;\r\n    public static COL_M = 9;\r\n    public static COL_SUM = 10;\r\n\r\n    public static summableCols = [\r\n        Board.COL_UP,\r\n        Board.COL_UP_DOWN,\r\n        Board.COL_DOWN,\r\n        Board.COL_N,\r\n        Board.COL_R,\r\n        Board.COL_D,\r\n        Board.COL_OPPOSITE,\r\n        Board.COL_TOWARD,\r\n        Board.COL_O,\r\n        Board.COL_M,\r\n    ];\r\n\r\n    public static editableRows = [\r\n        '1', '2', '3', '4', '5', '6', 'MIN', 'MAX', 'KENTA', 'TRILING', 'FULL', 'KARE', 'YAMB'\r\n    ];\r\n\r\n    public static sumRows = [\r\n        'SUM1', 'SUM2', 'SUM3'\r\n    ]\r\n\r\n    public readonly state: any = {\r\n        '1': {},\r\n        '2': {},\r\n        '3': {},\r\n        '4': {},\r\n        '5': {},\r\n        '6': {},\r\n        'SUM1': {},\r\n        'MIN': {},\r\n        'MAX': {},\r\n        'SUM2': {},\r\n        'KENTA': {},\r\n        'TRILING': {},\r\n        'FULL': {},\r\n        'KARE': {},\r\n        'YAMB': {},\r\n        'SUM3': {},\r\n        'TOTAL': '',\r\n    };\r\n\r\n    public setValue = (dirtyValue: string, row: string, col: number): void => {\r\n        const value: number = parseInt(dirtyValue);\r\n\r\n        if (dirtyValue !== '' && (isNaN(value) || value < 0)) {\r\n            return;\r\n        }\r\n\r\n        if (value > MAX_SINGLE_THROW_RESULT) {\r\n            return;\r\n        }\r\n\r\n        const state: any = this.state;\r\n\r\n        state['SUM1'] = {};\r\n        state['SUM2'] = {};\r\n        state['SUM3'] = {};\r\n        state['TOTAL'] = '';\r\n        state[row][col] = value;\r\n\r\n        this.setState(state);\r\n\r\n        this.calculateRowSum();\r\n        this.calculateColSum();\r\n        this.calculateTotal();\r\n    };\r\n\r\n    public calculateTotal = (): void => {\r\n        let total = 0;\r\n\r\n        for (let i in Board.sumRows) {\r\n            const value = this.state[Board.sumRows[i]][Board.COL_SUM];\r\n\r\n            if (!isNaN(value)) {\r\n                total += value;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            TOTAL: total > 0 ? total : '',\r\n        })\r\n    }\r\n\r\n    public calculateColSum = (): void => {\r\n        const state = this.state;\r\n\r\n        for (let i in Board.sumRows) {\r\n            let sum = 0;\r\n\r\n            for (let j in state[Board.sumRows[i]]) {\r\n                if (!state[Board.sumRows[i]].hasOwnProperty(j)) {\r\n                    continue;\r\n                }\r\n\r\n                let value = parseInt(state[Board.sumRows[i]][j]);\r\n                if (!isNaN(value)) {\r\n                    sum += value;\r\n                }\r\n            }\r\n\r\n            state[Board.sumRows[i]][Board.COL_SUM] = sum;\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    public calculateRowSum = (): void => {\r\n        const state = this.state;\r\n\r\n        for (let i in Board.sumRows) {\r\n            for (let j in Board.summableCols) {\r\n                state[Board.sumRows[i]][Board.summableCols[j]] = this.calculateCellSum(Board.sumRows[i], Board.summableCols[j]);\r\n            }\r\n        }\r\n\r\n        this.setState(state);\r\n    };\r\n\r\n    public calculateCellSum = (row: string, col: number): number | string => {\r\n\r\n        if (row === 'SUM2') {\r\n            const multiplier = this.state[1][col];\r\n            const min = this.state['MIN'][col];\r\n            const max = this.state['MAX'][col];\r\n\r\n            if (multiplier && min && max) {\r\n                return (max - min) * multiplier;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        let sum = 0;\r\n        const sumCols = this.getSumCols(row);\r\n\r\n        for (let i in sumCols) {\r\n            if (!sumCols.hasOwnProperty(i)) {\r\n                continue;\r\n            }\r\n\r\n            const sumCol = sumCols[i];\r\n\r\n            if (this.state.hasOwnProperty(sumCol)) {\r\n                let value = this.state[sumCol][col] || 0;\r\n                sum += value;\r\n            }\r\n        }\r\n\r\n        if (row === 'SUM1' && sum >= 60) {\r\n            sum += 30;\r\n        }\r\n\r\n        return sum > 0 ? sum : '';\r\n    };\r\n\r\n    public getSumCols = (sumRow: string): any => {\r\n        if (sumRow === 'SUM1') {\r\n            return ['1', '2', '3', '4', '5', '6'];\r\n        }\r\n\r\n        if (sumRow === 'SUM3') {\r\n            return ['KENTA', 'TRILING', 'FULL', 'KARE', 'YAMB'];\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    public getValue = (row: string, col: number): number | string => {\r\n        const value = this.state[row][col];\r\n\r\n        if (value === 0 && !this.isSumRow(row)) {\r\n            return 'x';\r\n        }\r\n\r\n        if (row === 'SUM2' && value === 0) {\r\n            const multiplier = this.state[1][col];\r\n            const min = this.state['MIN'][col];\r\n            const max = this.state['MAX'][col];\r\n\r\n            if (multiplier && min && max) {\r\n                return 0;\r\n            }\r\n\r\n            return '';\r\n        }\r\n\r\n        return value || '';\r\n    }\r\n    public isSumRow = (row: string): boolean => row === 'SUM1' || row === 'SUM2' || row === 'SUM3';\r\n\r\n    public isEnabled = (row: string, col: number): boolean => {\r\n        if (this.isSumRow(row)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    onKeyPress(e: any, row: string, col: number) {\r\n        if (e.keyCode === 13) {\r\n            e.target.blur();\r\n        }\r\n\r\n        if ((e.keyCode === 46 || e.keyCode === 8) && col !== Board.COL_SUM && !this.isSumRow(row)) {\r\n            let state = this.state;\r\n            state[row][col] = '';\r\n            this.setState(state);\r\n        }\r\n    }\r\n\r\n    onBlur(e: any, row: string, col: number) {\r\n        const simple = ['1', '2', '3', '4', '5', '6'];\r\n        const rowNum = parseInt(row);\r\n        const value = parseInt(e.currentTarget.value);\r\n\r\n        if (!isNaN(value) && simple.includes(row)) {\r\n            const validValues = [];\r\n            const values = [0, 1, 2, 3, 4, 5];\r\n\r\n            for (let i in values) {\r\n                validValues.push(values[i] * rowNum);\r\n            }\r\n\r\n            if (!validValues.includes(value)) {\r\n                e.currentTarget.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    getClasses(row: string, col: number) {\r\n        return '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table>\r\n                <thead>\r\n                <Row>\r\n                    <HeaderCell>\r\n                        <FontAwesomeIcon icon={faDice}/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>\r\n                        <FontAwesomeIcon icon={faChevronDown}/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>\r\n                        <FontAwesomeIcon icon={faChevronUp}/>\r\n                        <FontAwesomeIcon icon={faChevronDown}/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>\r\n                        <FontAwesomeIcon icon={faChevronUp}/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>N</HeaderCell>\r\n                    <HeaderCell>R</HeaderCell>\r\n                    <HeaderCell>D</HeaderCell>\r\n                    <HeaderCell>\r\n                        <VerticalArrowOpposite/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>\r\n                        <VerticalArrowToward/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>O</HeaderCell>\r\n                    <HeaderCell>M</HeaderCell>\r\n                    <HeaderCell/>\r\n                </Row>\r\n                </thead>\r\n                <tbody>\r\n                <Row>\r\n                    <HeaderCell>1</HeaderCell>\r\n\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <If condition={col === Board.COL_TOWARD}>\r\n                                <FontAwesomeIcon icon={faChevronDown}\r\n                                                 style={{ position: 'absolute', fontSize: 11, 'left': 3, top: 0 }}/>\r\n                            </If>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '1', col)}\r\n                                   value={this.getValue('1', col)}\r\n                                   disabled={!this.isEnabled('1', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '1', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '1', col)}\r\n                                   className={this.getClasses('1', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>2</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '2', col)}\r\n                                   value={this.getValue('2', col)}\r\n                                   disabled={!this.isEnabled('2', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '2', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '2', col)}\r\n                                   className={this.getClasses('2', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>3</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '3', col)}\r\n                                   value={this.getValue('3', col)}\r\n                                   disabled={!this.isEnabled('3', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '3', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '3', col)}\r\n                                   className={this.getClasses('3', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>4</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '4', col)}\r\n                                   value={this.getValue('4', col)}\r\n                                   disabled={!this.isEnabled('4', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '4', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '4', col)}\r\n                                   className={this.getClasses('4', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>5</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '5', col)}\r\n                                   value={this.getValue('5', col)}\r\n                                   disabled={!this.isEnabled('5', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '5', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '5', col)}\r\n                                   className={this.getClasses('5', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>6</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '6', col)}\r\n                                   value={this.getValue('6', col)}\r\n                                   disabled={!this.isEnabled('6', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '6', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '6', col)}\r\n                                   className={this.getClasses('6', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <SumRow>\r\n                    <HeaderCell>Σ</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <SumInput\r\n                                value={this.getValue('SUM1', col)}\r\n                                disabled\r\n                                type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell>\r\n                        <SumInput\r\n                            value={this.getValue('SUM1', Board.COL_SUM)}\r\n                            disabled\r\n                            type='text'\r\n                        />\r\n                    </Cell>\r\n                </SumRow>\r\n                <Row>\r\n                    <HeaderCell>MAX</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <If condition={col === Board.COL_OPPOSITE}>\r\n                                <FontAwesomeIcon icon={faChevronUp}\r\n                                                 style={{ position: 'absolute', fontSize: 11, 'left': 3, top: 0 }}/>\r\n                            </If>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'MAX', col)}\r\n                                   value={this.getValue('MAX', col)}\r\n                                   disabled={!this.isEnabled('MAX', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'MAX', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'MAX', col)}\r\n                                   className={this.getClasses('MAX', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>MIN</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <If condition={col === Board.COL_OPPOSITE}>\r\n                                <FontAwesomeIcon icon={faChevronDown}\r\n                                                 style={{ position: 'absolute', fontSize: 11, 'right': 3, bottom: 0 }}/>\r\n                            </If>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'MIN', col)}\r\n                                   value={this.getValue('MIN', col)}\r\n                                   disabled={!this.isEnabled('MIN', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'MIN', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'MIN', col)}\r\n                                   className={this.getClasses('MIN', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <SumRow>\r\n                    <HeaderCell>Σ</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <SumInput\r\n                                value={this.getValue('SUM2', col)}\r\n                                disabled\r\n                                type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell>\r\n                        <SumInput\r\n                            value={this.getValue('SUM2', Board.COL_SUM)}\r\n                            disabled\r\n                            type='text'\r\n                        />\r\n                    </Cell>\r\n                </SumRow>\r\n                <Row>\r\n                    <HeaderCell>KENTA</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'KENTA', col)}\r\n                                   value={this.getValue('KENTA', col)}\r\n                                   disabled={!this.isEnabled('KENTA', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'KENTA', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'KENTA', col)}\r\n                                   className={this.getClasses('KENTA', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>TRILING</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'TRILING', col)}\r\n                                   value={this.getValue('TRILING', col)}\r\n                                   disabled={!this.isEnabled('TRILING', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'TRILING', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'TRILING', col)}\r\n                                   className={this.getClasses('TRILING', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>FULL</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'FULL', col)}\r\n                                   value={this.getValue('FULL', col)}\r\n                                   disabled={!this.isEnabled('FULL', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'FULL', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'FULL', col)}\r\n                                   className={this.getClasses('FULL', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>POKER</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'KARE', col)}\r\n                                   value={this.getValue('KARE', col)}\r\n                                   disabled={!this.isEnabled('KARE', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'KARE', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'KARE', col)}\r\n                                   className={this.getClasses('KARE', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>YAMB</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <If condition={col === Board.COL_TOWARD}>\r\n                                <FontAwesomeIcon icon={faChevronUp}\r\n                                                 style={{ position: 'absolute', fontSize: 11, 'right': 3, bottom: 0 }}/>\r\n                            </If>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'YAMB', col)}\r\n                                   value={this.getValue('YAMB', col)}\r\n                                   disabled={!this.isEnabled('YAMB', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'YAMB', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'YAMB', col)}\r\n                                   className={this.getClasses('YAMB', col)}\r\n                                   type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <SumRow>\r\n                    <HeaderCell>Σ</HeaderCell>\r\n                    <Each items={Board.summableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <SumInput\r\n                                value={this.getValue('SUM3', col)}\r\n                                disabled\r\n                                type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell>\r\n                        <SumInput\r\n                            value={this.getValue('SUM3', Board.COL_SUM)}\r\n                            disabled\r\n                            type='text'\r\n                        />\r\n                    </Cell>\r\n                </SumRow>\r\n                <SumRow>\r\n                    <Cell colSpan={11}/>\r\n                    <Cell><SumInput disabled\r\n                                    type='text'\r\n                                    value={this.state.TOTAL}/></Cell>\r\n                </SumRow>\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\nimport './App.css';\nimport Board from \"./components/Board\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n                <Board/>\n\n                {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n                {/*<p>*/}\n                {/*  Edit <code>src/App.tsx</code> and save to reload.*/}\n                {/*</p>*/}\n                {/*<a*/}\n                {/*  className=\"App-link\"*/}\n                {/*  href=\"https://reactjs.org\"*/}\n                {/*  target=\"_blank\"*/}\n                {/*  rel=\"noopener noreferrer\"*/}\n                {/*>*/}\n                {/*  Learn React*/}\n                {/*</a>*/}\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
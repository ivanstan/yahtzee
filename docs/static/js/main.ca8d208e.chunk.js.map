{"version":3,"sources":["components/VerticalArrowToward.tsx","components/VerticalArrowOpposite.tsx","components/Board.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Flex","styled","div","VerticalArrowToward","icon","faChevronDown","faChevronUp","React","Component","VerticalArrowOpposite","Table","table","Row","tr","SumRow","Cell","td","HeaderCell","Input","input","SumInput","Board","props","i","state","cells","currentCell","row","col","setValue","dirtyValue","value","parseInt","isNaN","setState","calculateRowSum","calculateColSum","calculateTotal","total","sumRows","COL_SUM","TOTAL","sum","j","hasOwnProperty","editableCols","calculateCellSum","multiplier","min","max","sumCols","getSumCols","sumCol","sumRow","getValue","isSumRow","isEnabled","editableRows","createRef","e","keyCode","target","blur","this","includes","nextCell","navigateCell","current","focus","add","nextIndex","indexOf","nextCol","nextRow","rowNum","currentTarget","validValues","values","push","faDice","items","renderItem","index","key","condition","COL_TOWARD","style","position","fontSize","top","onChange","disabled","onKeyDown","onKeyPress","onBlur","className","getClasses","type","ref","onFocus","COL_OPPOSITE","bottom","colSpan","COL_UP","COL_UP_DOWN","COL_DOWN","COL_N","COL_R","COL_D","COL_O","COL_M","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ca8d208e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Flex = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nclass VerticalArrowToward extends React.Component<any, any> {\r\n    render() {\r\n        return (\r\n            <Flex>\r\n                <FontAwesomeIcon icon={faChevronDown}/>\r\n                <FontAwesomeIcon icon={faChevronUp}/>\r\n            </Flex>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerticalArrowToward;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown, faChevronUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Flex = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nclass VerticalArrowOpposite extends React.Component<any, any> {\r\n    render() {\r\n        return (\r\n            <Flex>\r\n                <FontAwesomeIcon icon={faChevronUp}/>\r\n                <FontAwesomeIcon icon={faChevronDown}/>\r\n            </Flex>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VerticalArrowOpposite;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown, faChevronUp, faDice } from '@fortawesome/free-solid-svg-icons'\r\nimport VerticalArrowToward from './VerticalArrowToward';\r\nimport VerticalArrowOpposite from './VerticalArrowOpposite';\r\nimport Each from 'react-each';\r\nimport { If } from 'react-if';\r\n\r\nconst Table = styled.table`\r\n    border: 2px solid #5c6274;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    color: #5c6274;\r\n`;\r\n\r\nconst Row = styled.tr`\r\n    border: 2px solid #5c6274;\r\n`;\r\n\r\nconst SumRow = styled(Row)`\r\n    background: #D1DAE7;\r\n`;\r\n\r\nconst Cell = styled.td`\r\n    border: 2px solid #5c6274;\r\n    position: relative;\r\n    width: 8.33%;\r\n    height: 32px;\r\n`;\r\n\r\nconst HeaderCell = styled(Cell)`\r\n    background: #A4B5CC;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    display: block;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    margin: 0;\r\n    padding: 0;\r\n    vertical-align: top;\r\n    max-width: 40px;\r\n    margin: auto;\r\n    font-family: 'Patrick Hand', cursive;\r\n    font-size: 17px;\r\n    color: #5c6274;\r\n    font-style: italic;\r\n    background: transparent;\r\n    border: 0;\r\n    \r\n    :focus {\r\n        outline: none !important;\r\n        border: 0;\r\n        background: #FFAAAA;\r\n    }\r\n`;\r\n\r\nconst SumInput = styled(Input)`\r\n    cursor: auto;\r\n`;\r\n\r\nconst DICE_COUNT = 6;\r\nconst MAX_SINGLE_DICE_RESULT = 6;\r\nconst MAX_SINGLE_THROW_RESULT = (DICE_COUNT - 1) * MAX_SINGLE_DICE_RESULT;\r\n\r\nclass Board extends React.Component<any, any> {\r\n\r\n    public static COL_UP = 0;\r\n    public static COL_UP_DOWN = 1;\r\n    public static COL_DOWN = 2;\r\n    public static COL_N = 3;\r\n    public static COL_R = 4;\r\n    public static COL_D = 5;\r\n    public static COL_OPPOSITE = 6;\r\n    public static COL_TOWARD = 7;\r\n    public static COL_O = 8;\r\n    public static COL_M = 9;\r\n    public static COL_SUM = 10;\r\n\r\n    public static editableCols = [\r\n        Board.COL_UP,\r\n        Board.COL_UP_DOWN,\r\n        Board.COL_DOWN,\r\n        Board.COL_N,\r\n        Board.COL_R,\r\n        Board.COL_D,\r\n        Board.COL_OPPOSITE,\r\n        Board.COL_TOWARD,\r\n        Board.COL_O,\r\n        Board.COL_M,\r\n    ];\r\n\r\n    public static editableRows = [\r\n        '1', '2', '3', '4', '5', '6', 'MAX', 'MIN', 'KENTA', 'TRILING', 'FULL', 'KARE', 'YAMB'\r\n    ];\r\n\r\n    public static sumRows = [\r\n        'SUM1', 'SUM2', 'SUM3'\r\n    ]\r\n\r\n    public readonly state: any = {\r\n        '1': {},\r\n        '2': {},\r\n        '3': {},\r\n        '4': {},\r\n        '5': {},\r\n        '6': {},\r\n        'SUM1': {},\r\n        'MIN': {},\r\n        'MAX': {},\r\n        'SUM2': {},\r\n        'KENTA': {},\r\n        'TRILING': {},\r\n        'FULL': {},\r\n        'KARE': {},\r\n        'YAMB': {},\r\n        'SUM3': {},\r\n        'TOTAL': '',\r\n    };\r\n\r\n    public cells: any = {};\r\n    public currentCell: any = { row: null, col: null };\r\n\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        for (let i in Board.editableRows) {\r\n            for (let j in Board.editableCols) {\r\n                if (!this.cells.hasOwnProperty(Board.editableRows[i])) {\r\n                    this.cells[Board.editableRows[i]] = {};\r\n                }\r\n\r\n                this.cells[Board.editableRows[i]][Board.editableCols[j]] = React.createRef();\r\n            }\r\n        }\r\n    }\r\n\r\n    public setValue = (dirtyValue: string, row: string, col: number): void => {\r\n        const value: number = parseInt(dirtyValue);\r\n\r\n        if (dirtyValue !== '' && (isNaN(value) || value < 0)) {\r\n            return;\r\n        }\r\n\r\n        if (value > MAX_SINGLE_THROW_RESULT) {\r\n            return;\r\n        }\r\n\r\n        const state: any = this.state;\r\n\r\n        state['SUM1'] = {};\r\n        state['SUM2'] = {};\r\n        state['SUM3'] = {};\r\n        state['TOTAL'] = '';\r\n        state[row][col] = value;\r\n\r\n        this.setState(state);\r\n\r\n        this.calculateRowSum();\r\n        this.calculateColSum();\r\n        this.calculateTotal();\r\n    };\r\n\r\n    public calculateTotal = (): void => {\r\n        let total = 0;\r\n\r\n        for (let i in Board.sumRows) {\r\n            const value = this.state[Board.sumRows[i]][Board.COL_SUM];\r\n\r\n            if (!isNaN(value)) {\r\n                total += value;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            TOTAL: total > 0 ? total : '',\r\n        })\r\n    }\r\n\r\n    public calculateColSum = (): void => {\r\n        const state = this.state;\r\n\r\n        for (let i in Board.sumRows) {\r\n            let sum = 0;\r\n\r\n            for (let j in state[Board.sumRows[i]]) {\r\n                if (!state[Board.sumRows[i]].hasOwnProperty(j)) {\r\n                    continue;\r\n                }\r\n\r\n                let value = parseInt(state[Board.sumRows[i]][j]);\r\n                if (!isNaN(value)) {\r\n                    sum += value;\r\n                }\r\n            }\r\n\r\n            state[Board.sumRows[i]][Board.COL_SUM] = sum;\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    public calculateRowSum = (): void => {\r\n        const state = this.state;\r\n\r\n        for (let i in Board.sumRows) {\r\n            for (let j in Board.editableCols) {\r\n                state[Board.sumRows[i]][Board.editableCols[j]] = this.calculateCellSum(Board.sumRows[i], Board.editableCols[j]);\r\n            }\r\n        }\r\n\r\n        this.setState(state);\r\n    };\r\n\r\n    public calculateCellSum = (row: string, col: number): number | string => {\r\n\r\n        if (row === 'SUM2') {\r\n            const multiplier = this.state[1][col];\r\n            const min = this.state['MIN'][col];\r\n            const max = this.state['MAX'][col];\r\n\r\n            if (multiplier && min && max) {\r\n                return (max - min) * multiplier;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        let sum = 0;\r\n        const sumCols = this.getSumCols(row);\r\n\r\n        for (let i in sumCols) {\r\n            if (!sumCols.hasOwnProperty(i)) {\r\n                continue;\r\n            }\r\n\r\n            const sumCol = sumCols[i];\r\n\r\n            if (this.state.hasOwnProperty(sumCol)) {\r\n                let value = this.state[sumCol][col] || 0;\r\n                sum += value;\r\n            }\r\n        }\r\n\r\n        if (row === 'SUM1' && sum >= 60) {\r\n            sum += 30;\r\n        }\r\n\r\n        return sum > 0 ? sum : '';\r\n    };\r\n\r\n    public getSumCols = (sumRow: string): any => {\r\n        if (sumRow === 'SUM1') {\r\n            return ['1', '2', '3', '4', '5', '6'];\r\n        }\r\n\r\n        if (sumRow === 'SUM3') {\r\n            return ['KENTA', 'TRILING', 'FULL', 'KARE', 'YAMB'];\r\n        }\r\n\r\n        return [];\r\n    };\r\n\r\n    public getValue = (row: string, col: number): number | string => {\r\n        const value = this.state[row][col];\r\n\r\n        if (value === 0 && !this.isSumRow(row)) {\r\n            return 'x';\r\n        }\r\n\r\n        if (row === 'SUM2' && value === 0) {\r\n            const multiplier = this.state[1][col];\r\n            const min = this.state['MIN'][col];\r\n            const max = this.state['MAX'][col];\r\n\r\n            if (multiplier && min && max) {\r\n                return 0;\r\n            }\r\n\r\n            return '';\r\n        }\r\n\r\n        return value || '';\r\n    }\r\n    public isSumRow = (row: string): boolean => row === 'SUM1' || row === 'SUM2' || row === 'SUM3';\r\n\r\n    public isEnabled = (row: string, col: number): boolean => {\r\n        if (this.isSumRow(row)) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    onKeyPress(e: any, row: string, col: number) {\r\n        if (e.keyCode === 13) {\r\n            e.target.blur();\r\n        }\r\n\r\n        if ((e.keyCode === 46 || e.keyCode === 8) && col !== Board.COL_SUM && !this.isSumRow(row)) {\r\n            let state = this.state;\r\n            state[row][col] = '';\r\n            this.setState(state);\r\n        }\r\n\r\n        const arrowKeys = [38, 40, 39, 37];\r\n        if (arrowKeys.includes(e.keyCode)) {\r\n            const nextCell: any = this.navigateCell(e.keyCode);\r\n            if (nextCell) {\r\n                nextCell.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    public navigateCell(keyCode: number) {\r\n\r\n        if (keyCode === 37 || keyCode === 39) { // LEFT/RIGHT\r\n            let add = 1;\r\n\r\n            if (keyCode === 37) {\r\n                add = -1;\r\n            }\r\n\r\n            const currentIndex: number = Board.editableCols.indexOf(this.currentCell.col);\r\n            let nextIndex: any = currentIndex + add;\r\n\r\n            const nextCol = Board.editableCols[nextIndex];\r\n\r\n            if (typeof nextCol !== 'undefined') {\r\n                return this.cells[this.currentCell.row][nextCol];\r\n            }\r\n        }\r\n\r\n        if (keyCode === 38 || keyCode === 40) { // UP/DOWN\r\n            let add = 1;\r\n\r\n            if (keyCode === 38) {\r\n                add = -1;\r\n            }\r\n\r\n            const currentIndex: number = Board.editableRows.indexOf(this.currentCell.row);\r\n            let nextIndex: any = currentIndex + add;\r\n\r\n            const nextRow = Board.editableRows[nextIndex];\r\n\r\n            if (typeof nextRow !== 'undefined') {\r\n                return this.cells[nextRow][this.currentCell.col];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    onFocus(e: any, row: string, col: number) {\r\n        this.currentCell.row = row;\r\n        this.currentCell.col = col;\r\n    }\r\n\r\n    onBlur(e: any, row: string, col: number) {\r\n        const simple = ['1', '2', '3', '4', '5', '6'];\r\n        const rowNum = parseInt(row);\r\n        const value = parseInt(e.currentTarget.value);\r\n\r\n        if (!isNaN(value) && simple.includes(row)) {\r\n            const validValues = [];\r\n            const values = [0, 1, 2, 3, 4, 5];\r\n\r\n            for (let i in values) {\r\n                validValues.push(values[i] * rowNum);\r\n            }\r\n\r\n            if (!validValues.includes(value)) {\r\n                e.currentTarget.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    getClasses(row: string, col: number) {\r\n        return '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table>\r\n                <thead>\r\n                <Row>\r\n                    <HeaderCell>\r\n                        <FontAwesomeIcon icon={faDice}/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>\r\n                        <FontAwesomeIcon icon={faChevronDown}/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>\r\n                        <FontAwesomeIcon icon={faChevronUp}/>\r\n                        <FontAwesomeIcon icon={faChevronDown}/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>\r\n                        <FontAwesomeIcon icon={faChevronUp}/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>N</HeaderCell>\r\n                    <HeaderCell>R</HeaderCell>\r\n                    <HeaderCell>D</HeaderCell>\r\n                    <HeaderCell>\r\n                        <VerticalArrowOpposite/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>\r\n                        <VerticalArrowToward/>\r\n                    </HeaderCell>\r\n                    <HeaderCell>O</HeaderCell>\r\n                    <HeaderCell>M</HeaderCell>\r\n                    <HeaderCell/>\r\n                </Row>\r\n                </thead>\r\n                <tbody>\r\n                <Row>\r\n                    <HeaderCell>1</HeaderCell>\r\n\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <If condition={col === Board.COL_TOWARD}>\r\n                                <FontAwesomeIcon icon={faChevronDown}\r\n                                                 style={{ position: 'absolute', fontSize: 11, 'left': 3, top: 0 }}/>\r\n                            </If>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '1', col)}\r\n                                   value={this.getValue('1', col)}\r\n                                   disabled={!this.isEnabled('1', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '1', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '1', col)}\r\n                                   className={this.getClasses('1', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['1'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, '1', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>2</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '2', col)}\r\n                                   value={this.getValue('2', col)}\r\n                                   disabled={!this.isEnabled('2', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '2', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '2', col)}\r\n                                   className={this.getClasses('2', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['2'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, '2', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>3</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '3', col)}\r\n                                   value={this.getValue('3', col)}\r\n                                   disabled={!this.isEnabled('3', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '3', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '3', col)}\r\n                                   className={this.getClasses('3', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['3'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, '3', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>4</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '4', col)}\r\n                                   value={this.getValue('4', col)}\r\n                                   disabled={!this.isEnabled('4', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '4', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '4', col)}\r\n                                   className={this.getClasses('4', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['4'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, '4', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>5</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '5', col)}\r\n                                   value={this.getValue('5', col)}\r\n                                   disabled={!this.isEnabled('5', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '5', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '5', col)}\r\n                                   className={this.getClasses('5', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['5'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, '5', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>6</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, '6', col)}\r\n                                   value={this.getValue('6', col)}\r\n                                   disabled={!this.isEnabled('6', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, '6', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, '6', col)}\r\n                                   className={this.getClasses('6', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['6'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, '6', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <SumRow>\r\n                    <HeaderCell>Σ</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <SumInput\r\n                                value={this.getValue('SUM1', col)}\r\n                                disabled\r\n                                type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell>\r\n                        <SumInput\r\n                            value={this.getValue('SUM1', Board.COL_SUM)}\r\n                            disabled\r\n                            type='text'\r\n                        />\r\n                    </Cell>\r\n                </SumRow>\r\n                <Row>\r\n                    <HeaderCell>MAX</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <If condition={col === Board.COL_OPPOSITE}>\r\n                                <FontAwesomeIcon icon={faChevronUp}\r\n                                                 style={{ position: 'absolute', fontSize: 11, 'left': 3, top: 0 }}/>\r\n                            </If>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'MAX', col)}\r\n                                   value={this.getValue('MAX', col)}\r\n                                   disabled={!this.isEnabled('MAX', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'MAX', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'MAX', col)}\r\n                                   className={this.getClasses('MAX', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['MAX'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, 'MAX', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>MIN</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <If condition={col === Board.COL_OPPOSITE}>\r\n                                <FontAwesomeIcon icon={faChevronDown}\r\n                                                 style={{ position: 'absolute', fontSize: 11, 'right': 3, bottom: 0 }}/>\r\n                            </If>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'MIN', col)}\r\n                                   value={this.getValue('MIN', col)}\r\n                                   disabled={!this.isEnabled('MIN', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'MIN', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'MIN', col)}\r\n                                   className={this.getClasses('MIN', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['MIN'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, 'MIN', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <SumRow>\r\n                    <HeaderCell>Σ</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <SumInput\r\n                                value={this.getValue('SUM2', col)}\r\n                                disabled\r\n                                type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell>\r\n                        <SumInput\r\n                            value={this.getValue('SUM2', Board.COL_SUM)}\r\n                            disabled\r\n                            type='text'\r\n                        />\r\n                    </Cell>\r\n                </SumRow>\r\n                <Row>\r\n                    <HeaderCell>KENTA</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'KENTA', col)}\r\n                                   value={this.getValue('KENTA', col)}\r\n                                   disabled={!this.isEnabled('KENTA', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'KENTA', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'KENTA', col)}\r\n                                   className={this.getClasses('KENTA', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['KENTA'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, 'KENTA', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>TRILING</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'TRILING', col)}\r\n                                   value={this.getValue('TRILING', col)}\r\n                                   disabled={!this.isEnabled('TRILING', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'TRILING', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'TRILING', col)}\r\n                                   className={this.getClasses('TRILING', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['TRILING'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, 'TRILING', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>FULL</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'FULL', col)}\r\n                                   value={this.getValue('FULL', col)}\r\n                                   disabled={!this.isEnabled('FULL', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'FULL', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'FULL', col)}\r\n                                   className={this.getClasses('FULL', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['FULL'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, 'FULL', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>POKER</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'KARE', col)}\r\n                                   value={this.getValue('KARE', col)}\r\n                                   disabled={!this.isEnabled('KARE', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'KARE', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'KARE', col)}\r\n                                   className={this.getClasses('KARE', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['KARE'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, 'KARE', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <Row>\r\n                    <HeaderCell>YAMB</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <If condition={col === Board.COL_TOWARD}>\r\n                                <FontAwesomeIcon icon={faChevronUp}\r\n                                                 style={{ position: 'absolute', fontSize: 11, 'right': 3, bottom: 0 }}/>\r\n                            </If>\r\n                            <Input onChange={(e: any) => this.setValue(e.target.value, 'YAMB', col)}\r\n                                   value={this.getValue('YAMB', col)}\r\n                                   disabled={!this.isEnabled('YAMB', col)}\r\n                                   onKeyDown={(e: any) => this.onKeyPress(e, 'YAMB', col)}\r\n                                   onBlur={(e: any) => this.onBlur(e, 'YAMB', col)}\r\n                                   className={this.getClasses('YAMB', col)}\r\n                                   type='text'\r\n                                   ref={this.cells['YAMB'][col]}\r\n                                   onFocus={(e: any) => this.onFocus(e, 'YAMB', col)}\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell/>\r\n                </Row>\r\n                <SumRow>\r\n                    <HeaderCell>Σ</HeaderCell>\r\n                    <Each items={Board.editableCols} renderItem={(col: number, index: number) => (\r\n                        <Cell key={index}>\r\n                            <SumInput\r\n                                value={this.getValue('SUM3', col)}\r\n                                disabled\r\n                                type='text'\r\n                            />\r\n                        </Cell>\r\n                    )}/>\r\n                    <Cell>\r\n                        <SumInput\r\n                            value={this.getValue('SUM3', Board.COL_SUM)}\r\n                            disabled\r\n                            type='text'\r\n                        />\r\n                    </Cell>\r\n                </SumRow>\r\n                <SumRow>\r\n                    <Cell colSpan={11}/>\r\n                    <Cell><SumInput disabled\r\n                                    type='text'\r\n                                    value={this.state.TOTAL}/></Cell>\r\n                </SumRow>\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\nimport './App.css';\nimport Board from \"./components/Board\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n\n                <Board/>\n\n                {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n                {/*<p>*/}\n                {/*  Edit <code>src/App.tsx</code> and save to reload.*/}\n                {/*</p>*/}\n                {/*<a*/}\n                {/*  className=\"App-link\"*/}\n                {/*  href=\"https://reactjs.org\"*/}\n                {/*  target=\"_blank\"*/}\n                {/*  rel=\"noopener noreferrer\"*/}\n                {/*>*/}\n                {/*  Learn React*/}\n                {/*</a>*/}\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}